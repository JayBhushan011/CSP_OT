{"ast":null,"code":"var _jsxFileName = \"/Users/jaybhushan/Desktop/Mediset/client/src/components/createprescription/createpres.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./createpres.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSolid, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreatePrescription() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [plusSign, setPlusSign] = useState(0);\n\n  const onSubmit = data => console.log(data); //data variable to be put on block\n\n\n  const [message, setMessage] = useState();\n  useEffect(() => {\n    async function getMessage() {\n      //inbox.methods.setMessage('bye').send({ from: accounts[0] })\n      //const message = await inbox.methods.message().call();\n      const message = await mediset.methods.setMessage('hellonew').send({\n        from: accounts[0]\n      });\n      setMessage(message);\n    }\n\n    getMessage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.gstatic.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500&display=swap\",\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-class\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome-p\",\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-class\",\n          defaultValue: \"Patient ID\",\n          ...register(\"PatientID\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 109\n        }, this), errors.PatientID && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-errors\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-class\",\n          defaultValue: \"Medicine\",\n          ...register(\"Medicine\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 108\n        }, this), errors.Medicine && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-errors\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus,\n          className: \"plus-button\",\n          onClick: () => setPlusSign(plusSign + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this), Array.from(Array(plusSign)).map((c, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-class\",\n              defaultValue: \"Other Medicine\",\n              ...register(\"Medicine\" + index)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this)\n          }, void 0, false);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-class\",\n          type: \"submit\",\n          value: \"Send Prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drops\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop drop-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop drop-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop drop-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop drop-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop drop-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreatePrescription, \"BicQkCvqJNKWyGYHoU2UoF3MohQ=\", false, function () {\n  return [useForm];\n});\n\n_c = CreatePrescription;\nexport default CreatePrescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePrescription\");","map":{"version":3,"sources":["/Users/jaybhushan/Desktop/Mediset/client/src/components/createprescription/createpres.js"],"names":["React","useState","useForm","FontAwesomeIcon","faSolid","faPlus","CreatePrescription","register","handleSubmit","watch","formState","errors","plusSign","setPlusSign","onSubmit","data","console","log","message","setMessage","useEffect","getMessage","mediset","methods","send","from","accounts","required","PatientID","Medicine","Array","map","c","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./createpres.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSolid, faPlus } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction CreatePrescription(){\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const [plusSign, setPlusSign] = useState(0);\n\n\n    const onSubmit = data => console.log(data); //data variable to be put on block\n\n    const [message,setMessage] = useState();\n\n    useEffect( () => {\n      async function getMessage(){\n        //inbox.methods.setMessage('bye').send({ from: accounts[0] })\n\n        //const message = await inbox.methods.message().call();\n        const message = await mediset.methods.setMessage('hellonew').send( {from: accounts[0]});\n        setMessage(message);\n      }\n      getMessage();\n\n    }, [] );\n\n    return (\n    <>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500&display=swap\" rel=\"stylesheet\" /> \n\n    <div className=\"container\">\n    <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n    <p className=\"welcome-p\">Welcome</p>\n\n    <input className=\"input-class\" defaultValue=\"Patient ID\" {...register(\"PatientID\", {required: true})} /><br />\n    {errors.PatientID && <span className=\"span-errors\">This field is required</span>}\n\n    \n    <input className=\"input-class\" defaultValue=\"Medicine\" {...register(\"Medicine\", { required: true })} /><br />\n    {errors.Medicine && <span className=\"span-errors\" >This field is required</span>}\n\n    <FontAwesomeIcon icon={faPlus} className=\"plus-button\" onClick={() => setPlusSign(plusSign + 1)} />\n    {Array.from(Array(plusSign)).map((c, index) => {\n        return (\n        \n        <>\n          <input className=\"input-class\" key={index} defaultValue=\"Other Medicine\" {...register(\"Medicine\"+index)} />\n        </>\n        );\n      \n      })}\n\n    \n    <input className=\"input-class\" type=\"submit\" value=\"Send Prescription\" /><br />\n\n    \n    </form>\n\n      <div className=\"drops\">\n        <div className=\"drop drop-1\"></div>\n        <div className=\"drop drop-2\"></div>\n        <div className=\"drop drop-3\"></div>\n        <div className=\"drop drop-4\"></div>\n        <div className=\"drop drop-5\"></div>\n      </div>\n    </div>\n   \n    \n    </>\n  );\n}\n\nexport default CreatePrescription;\n\n\n"]},"metadata":{},"sourceType":"module"}