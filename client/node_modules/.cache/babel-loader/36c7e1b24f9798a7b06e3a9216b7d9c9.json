{"ast":null,"code":"var _jsxFileName = \"/Users/jaybhushan/Desktop/CSP Project/client/src/components/receiver/receiver.js\",\n    _s = $RefreshSig$();\n\nimport \"./receiver.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction Receiver() {\n  _s();\n\n  const [otinput, setOTinput] = useState(-1);\n  let data;\n  let PK;\n  let rNum;\n\n  async function getPublicKeyFromServer() {\n    try {\n      data = await axios.get('http://localhost:3001/api/main/getPK');\n      data = value.data;\n      PK = data.PK;\n      rNum = data.rNum;\n      console.log(\"got PK from server - \" + PK);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getPublicKeyFromServer();\n  const array = new BigUint64Array(1);\n  let k = window.crypto.getRandomValues(array)[0];\n  console.log(k);\n  let b = getRndInteger(0, 1);\n\n  async function handleSubmit() {\n    console.log(otinput);\n    axios.post('http://localhost:3001/api/main/', {\n      \"value\": otinput\n    });\n\n    try {\n      var value = await axios.get('http://localhost:3001/api/main/getMessage');\n      value = value.data;\n      console.log(\"got from server - \" + value);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function Button(props) {\n    function handleClick() {\n      setOTinput(props.value);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: [\" \", props.value, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Select input \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \" i \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"0\",\n      children: \" 0 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"1\",\n      children: \" 1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Receiver, \"1fCkIl7hhv5oSBsu4J0I3carPqg=\");\n\n_c = Receiver;\nexport default Receiver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"sources":["/Users/jaybhushan/Desktop/CSP Project/client/src/components/receiver/receiver.js"],"names":["React","useState","useEffect","axios","getRndInteger","min","max","Math","floor","random","Receiver","otinput","setOTinput","data","PK","rNum","getPublicKeyFromServer","get","value","console","log","error","array","BigUint64Array","k","window","crypto","getRandomValues","b","handleSubmit","post","Button","props","handleClick"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA+CA,GAAtD;AACD;;AACH,SAASK,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,MAAIY,IAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,IAAJ;;AAEA,iBAAeC,sBAAf,GAAuC;AACnC,QAAG;AACCH,MAAAA,IAAI,GAAG,MAAMV,KAAK,CAACc,GAAN,CAAU,sCAAV,CAAb;AACAJ,MAAAA,IAAI,GAAGK,KAAK,CAACL,IAAb;AACAC,MAAAA,EAAE,GAAGD,IAAI,CAACC,EAAV;AACAC,MAAAA,IAAI,GAAGF,IAAI,CAACE,IAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BN,EAAtC;AACH,KAND,CAME,OAAMO,KAAN,EAAY;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ;;AAEDL,EAAAA,sBAAsB;AACtB,QAAMM,KAAK,GAAG,IAAIC,cAAJ,CAAmB,CAAnB,CAAd;AACA,MAAIC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcC,eAAd,CAA8BL,KAA9B,EAAqC,CAArC,CAAR;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,MAAII,CAAC,GAAGxB,aAAa,CAAC,CAAD,EAAG,CAAH,CAArB;;AAEA,iBAAeyB,YAAf,GAA6B;AACzBV,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAR,IAAAA,KAAK,CAAC2B,IAAN,CAAW,iCAAX,EAA6C;AAC7C,eAASnB;AADoC,KAA7C;;AAGA,QAAI;AACA,UAAIO,KAAK,GAAG,MAAMf,KAAK,CAACc,GAAN,CAAU,2CAAV,CAAlB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACL,IAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,KAAnC;AACH,KAJD,CAKA,OAAMG,KAAN,EAAa;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ;;AAED,WAASU,MAAT,CAAgBC,KAAhB,EAAsB;AAElB,aAASC,WAAT,GAAsB;AAClBrB,MAAAA,UAAU,CAACoB,KAAK,CAACd,KAAP,CAAV;AACH;;AACD,wBACI;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAEe,WAAjB;AAAA,wBAAgCD,KAAK,CAACd,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAKH;;AACD,sBACE;AAAA,4BACA;AAAA,gDAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAMA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEW,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADF;AAYD;;GA9DMnB,Q;;KAAAA,Q;AAgET,eAAeA,QAAf","sourcesContent":["import \"./receiver.css\"\nimport React, { useState, useEffect } from \"react\"\nimport axios from \"axios\";\n\nfunction getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n  }\nfunction Receiver(){\n    const [otinput, setOTinput] = useState(-1)\n    let data;\n    let PK;\n    let rNum;\n    \n    async function getPublicKeyFromServer(){\n        try{\n            data = await axios.get('http://localhost:3001/api/main/getPK');\n            data = value.data;\n            PK = data.PK;\n            rNum = data.rNum;\n            console.log(\"got PK from server - \" + PK);\n        } catch(error){\n            console.log(error);\n        }\n    }\n    \n    getPublicKeyFromServer()\n    const array = new BigUint64Array(1);\n    let k = window.crypto.getRandomValues(array)[0];\n    console.log(k)\n    let b = getRndInteger(0,1)\n    \n    async function handleSubmit(){\n        console.log(otinput);\n        axios.post('http://localhost:3001/api/main/',{\n        \"value\": otinput,\n    });\n        try {\n            var value = await axios.get('http://localhost:3001/api/main/getMessage');\n            value = value.data;\n            console.log(\"got from server - \" + value);\n        }\n        catch(error) {\n            console.log(error);\n        }\n    }\n\n    function Button(props){\n\n        function handleClick(){\n            setOTinput(props.value);\n        }\n        return(\n            <>\n            <button onClick={handleClick}> {props.value} </button>\n            </>\n        );\n    }\n    return (\n      <> \n      <h2> Select input <i> i </i></h2>\n      <Button value=\"0\"> 0 </Button>\n      <Button value=\"1\"> 1 </Button>\n      \n\n      <button type=\"submit\" onClick={handleSubmit}  > Submit </button>\n\n\n      </>\n    );\n  }\n\nexport default Receiver;"]},"metadata":{},"sourceType":"module"}