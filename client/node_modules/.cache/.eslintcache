[{"/Users/jaybhushan/Desktop/Mediset/client/src/index.js":"1","/Users/jaybhushan/Desktop/Mediset/client/src/App.js":"2","/Users/jaybhushan/Desktop/Mediset/client/src/components/homepage/homepage.js":"3","/Users/jaybhushan/Desktop/Mediset/client/src/components/createprescription/createpres.js":"4","/Users/jaybhushan/Desktop/Mediset/client/src/components/navbar/navbar.js":"5","/Users/jaybhushan/Desktop/Mediset/client/src/components/usepres/usepres.js":"6"},{"size":219,"mtime":1650353709542,"results":"7","hashOfConfig":"8"},{"size":742,"mtime":1650461971976,"results":"9","hashOfConfig":"8"},{"size":926,"mtime":1650462140008,"results":"10","hashOfConfig":"8"},{"size":2044,"mtime":1650453618281,"results":"11","hashOfConfig":"8"},{"size":219,"mtime":1650375156925,"results":"12","hashOfConfig":"8"},{"size":1350,"mtime":1650462447944,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"imhajl",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/jaybhushan/Desktop/Mediset/client/src/index.js",[],[],[],"/Users/jaybhushan/Desktop/Mediset/client/src/App.js",[],[],"/Users/jaybhushan/Desktop/Mediset/client/src/components/homepage/homepage.js",[],[],"/Users/jaybhushan/Desktop/Mediset/client/src/components/createprescription/createpres.js",["35","36"],[],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./createpres.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSolid, faPlus } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction CreatePrescription(){\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const [plusSign, setPlusSign] = useState(0);\n\n\n    const onSubmit = data => console.log(data); //data variable to be put on block\n\n\n\n    return (\n    <>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500&display=swap\" rel=\"stylesheet\" /> \n\n    <div className=\"container\">\n    <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n    <p className=\"welcome-p\">Welcome</p>\n\n    <input className=\"input-class\" defaultValue=\"Patient ID\" {...register(\"PatientID\", {required: true})} /><br />\n    {errors.PatientID && <span className=\"span-errors\">This field is required</span>}\n\n    \n    <input className=\"input-class\" defaultValue=\"Medicine\" {...register(\"Medicine\", { required: true })} /><br />\n    {errors.Medicine && <span className=\"span-errors\" >This field is required</span>}\n\n    <FontAwesomeIcon icon={faPlus} className=\"plus-button\" onClick={() => setPlusSign(plusSign + 1)} />\n    {Array.from(Array(plusSign)).map((c, index) => {\n        return (\n        \n        <>\n          <input className=\"input-class\" key={index} defaultValue=\"Other Medicine\" {...register(\"Medicine\"+index)} />\n        </>\n        );\n      \n      })}\n\n    \n    <input className=\"input-class\" type=\"submit\" value=\"Send Prescription\" /><br />\n\n    \n    </form>\n\n      <div className=\"drops\">\n        <div className=\"drop drop-1\"></div>\n        <div className=\"drop drop-2\"></div>\n        <div className=\"drop drop-3\"></div>\n        <div className=\"drop drop-4\"></div>\n        <div className=\"drop drop-5\"></div>\n      </div>\n    </div>\n   \n    \n    </>\n  );\n}\n\nexport default CreatePrescription;\n\n\n","/Users/jaybhushan/Desktop/Mediset/client/src/components/navbar/navbar.js",[],[],"/Users/jaybhushan/Desktop/Mediset/client/src/components/usepres/usepres.js",["37","38","39"],[],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./usepres.css\"\n\nfunction UsePrescription(){\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const [plusSign, setPlusSign] = useState(0);\n\n\n    const onSubmit = data => console.log(data); //data variable to be put on block\n\n\n\n    return (\n    <>\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500&display=swap\" rel=\"stylesheet\" /> \n\n    <div className=\"container\">\n    <form className=\"form-class\" onSubmit={handleSubmit(onSubmit)}>\n    <p className=\"welcome-p\"> Enter Patient ID </p>\n\n    <input className=\"input-class\" defaultValue=\"Patient ID\" {...register(\"PatientID\", {required: true})} /><br />\n    {errors.PatientID && <span className=\"span-errors\">This field is required</span>}\n\n\n    <input className=\"input-class\" type=\"submit\" value=\"Request Prescription\" /><br />\n\n    \n    </form>\n\n      <div className=\"drops\">\n        <div className=\"drop drop-1\"></div>\n        <div className=\"drop drop-2\"></div>\n        <div className=\"drop drop-3\"></div>\n        <div className=\"drop drop-4\"></div>\n        <div className=\"drop drop-5\"></div>\n      </div>\n    </div>\n   \n    \n    </>\n  );\n}\n\nexport default UsePrescription;",{"ruleId":"40","severity":1,"message":"41","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":9,"column":37,"nodeType":"42","messageId":"43","endLine":9,"endColumn":42},{"ruleId":"40","severity":1,"message":"44","line":7,"column":37,"nodeType":"42","messageId":"43","endLine":7,"endColumn":42},{"ruleId":"40","severity":1,"message":"45","line":8,"column":12,"nodeType":"42","messageId":"43","endLine":8,"endColumn":20},{"ruleId":"40","severity":1,"message":"46","line":8,"column":22,"nodeType":"42","messageId":"43","endLine":8,"endColumn":33},"no-unused-vars","'faSolid' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'plusSign' is assigned a value but never used.","'setPlusSign' is assigned a value but never used."]